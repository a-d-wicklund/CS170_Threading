In this project, I made a library that implements some of the functions in the pthreads library. I think that overall it went well. I now thoroughly understand the concepts involved, and I feel pretty comfortable with having this code as the foundation for the next project. 
I passed all the tests in the simple autograder that was provided to us by the TAs. However, there was another autograder that a fellow student made, whichmy program did not pass with flying colors. I sent a lot of time trying to fix the parts that were not working, but wasn't able to in the end. Specifically, when there is a loop in the 'main' part that creates one thread after another which all point to the same function, then that function in turn creates a thread on each invocation, my library will successfully create all n threads and then execute them one by one, creating a new thread each time. Then it will go back to main briefly and start executing the second batch of threads. Once this is done, it goes back to main. At this point, I expect main to get out of the for loop and continue on. Instead, it restarts the loop and does the process all over again. I was not able to find the reason why it does this, and if whoever is reading this has an idea, some feedback would be much appreciated, as it might become a bigger problem during the next assignment. 
One of the interesting issues that I ran into was the fact that my timer was being blocked once a new thread was created. Meaning that if that thread had an infinite loop, the alarm would never interrupt it to give some time to another thread. The fix for this was to put in a function call to sigemptyset(), which apparently makes sure that no signals are blocked. 
Other than the one issue, I think this project went much better than the first, and I gained more insight from it too.  
